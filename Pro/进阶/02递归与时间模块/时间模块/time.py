import time




"""
UTC:(世界协调时间）：格林尼治天文时间，世界标准时间，在中国是UTC+8
DST(夏令时）：是一种节约能源而认为规定时间制度，在夏季调快一小时

时间表示形式：
    1，时间戳
        以整型或者浮点型表示时间的一个以秒为单位的时间间隔，这个时间间隔的基础知识是从1970年1月1日开始的
    2，元组
        一种Python的数据结构表示，这个元组有9个整型内容
            year
            day
            hours
            minutes
            seconds
            weekday
            juliaday
            flag(1或者-1或者0)
    3，格式化字符串
    %a本地Klocale)简化星期名称
    %A本地完整星期名称
    %b本地简化月份名称
    %B本地完整月份名称
    %c本地相应的日期和时间表示
    %d一个月中的第几天(01-31)
    %H一天中的第几个小时(24小时制,00-23)
    %I 第几个小时(12小时制,01-12)
    %J一年中的第几天(001-366)
    %m(01-12)
    %M分钟数(00-59)
    %p本地am或者pm的相应符
    %s秒(01-61)
    %U一年中的星期数。(00-53星期天是一个星期的开始。)第一个星期天之前的所有天数部放在第0周
    %w一个星期中的第几天(0-6.0是星期天)
    %W和%U基本相同,不同的是%W以星期一为一个星期的开始。
    %x本地相应日期
    %X本地相应时间
    %y 去掉世纪的年份(00-99)
    %Y完整的年份
    %Z时区的名字(如果不存在为空字符)
    %% "%"字符



"""


# 返回当前时间的时间戳，浮点数形式，不需要参数
c = time.time()
print(c)

# 将时间戳转为UTC时间元组
t = time.gmtime(c)
print(t)

# 将时间戳转为本地时间元组
b = time.localtime(c)
print(b)

# 将本地时间元组转为时间戳
m = time.mktime(b)
print(m)

# 将时间元组转换成字符串
s = time.asctime(b)
print(s)

# 将时间戳转为字符串
p = time.ctime(c)
print(p)

#将时间元组转换成给定格式的字符串，参数2为时间元组，如果没有参数2，默认转成当前时间
p1 = time.strftime("%Y-%m-%d %H:%M:%S",b)
print(p1)

# 将时间字符串转为时间元组
w = time.strptime(p1,"%Y-%m-%d %H:%M:%S")
print(w)

# 延迟一个时间，整型或者浮点型
# time.sleep(4)

# 返回当前程序的cup执行时间
# Unix形同始终返回全部的运行时间
# windows从第二次开始，都是以第一个调用此函数的开始间戳作为基数
y1 = time.clock()
print(y1)
time.sleep(2)
y2 = time.clock()
print(y2)







































